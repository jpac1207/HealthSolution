@model IEnumerable<HealthSolution.ViewModels.ConsultaViewModel>
@using HealthSolution.Extensions
@using HealthSolution.Models

@{
    ViewBag.Title = "Consultas";
    var queryOptions = (QueryOptions)ViewBag.QueryOptions;
}

@{
    string lvparams = "";
    var doutor = "";
    if (ViewBag.doutor != null)
    {
        doutor = ViewBag.doutor;
    }

    var paciente = "";
    if (ViewBag.paciente != null)
    {
        paciente = ViewBag.paciente;
    }

    var especialidade = "";
    if (ViewBag.especialidade != null)
    {
        especialidade = ViewBag.especialidade;
    }

    var data = "";
    if (ViewBag.data != null)
    {
        data = ViewBag.data;
    }

    lvparams = string.Format("doutor={0}&paciente={1}&especialidade={2}&data={3}", doutor, paciente, especialidade, data);
}

<br />
<p>
    Consultas
    <span style='float:right;'>
        <a class="btn btn-primary" href="~/ConsultaViewModel/Create">Agendar Nova Consulta <span class="oi oi-plus"></span></a>
        <a class="btn btn-primary" href="@Url.Action("")/Export?SortOrder=@queryOptions.SortOrder&SortField=@queryOptions.SortField&CurrentPage=@queryOptions.CurrentPage&PageSize=@queryOptions.PageSize&@lvparams">Exportar <span class="oi oi-data-transfer-download"></span></a>
    </span>
</p>
<div class="card" style="background-color:#F1EDF8">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "card-body" }))
    {
        <div class="row">
            <div class="col-md-2">
                @Html.TextBox("doutor", null, new { @class = "form-control", placeholder = "Doutor", onchange = "form.submit()" })
            </div>
            <div class="col-md-2">
                @Html.TextBox("paciente", null, new { @class = "form-control", placeholder = "Paciente", onchange = "form.submit()" })
            </div>
            <div class="col-md-2">
                @Html.TextBox("especialidade", null, new { @class = "form-control", placeholder = "Especialidade", onchange = "form.submit()" })
            </div>
            <div class="col-md-2">
                @Html.TextBox("data", null, new { @class = "form-control date datepicker", placeholder = "Data", onchange = "form.submit()" })
            </div>
            <div class="col-md-2">
                <button class="btn btn-success">Buscar</button>
            </div>
        </div>
    }
</div>
<div class="table-responsive table-hover mt-3">
    <table class="table">
        <tr class="bg-light text-dark">
            <th>
                Especialidade
            </th>
            <th>
                Doutor
            </th>
            <th>
                Paciente
            </th>
            <th>
                Data
            </th>
            <th>
                Horário
            </th>
            <th>
                Observação
            </th>
            <th>
                Valor Pago
            </th>
            <th>
                Forma Pagamento
            </th>
            <th>
                Link do Arquivo
            </th>
            <th class="buttonCell"></th>
        </tr>

        @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Especialidade.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Especialista.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Paciente.Nome)
                </td>
                <td>
                    @(item.Date != null ? item.Date.Date.ToString("dd/MM/yyyy") : "")
                </td>
                <td>
                    @Html.GetFormatedHour(item.Hora, item.Minuto)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Observacao)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ValorPago)
                </td>
                <td>
                    @(item.FormaPagamento != null ? item.FormaPagamento.Nome : "-")
                </td>
                <td style="text-align:center">                   
                    @(item.LinkArquivo == "#" ? Html.Raw("<a href='#' class ='btn btn-link' style='text-decoration:none;color:black;'>-</a>") : Html.ActionLink("Baixar Arquivo", "GetFile", new { fileName = Url.Content(item.LinkArquivo) }, new { @class = "btn btn-link" }))
                </td>
                <td>
                    @Html.ActionLink("Editar", "Edit", new { id = item.Id }, new { @class = "btn btn-primary" }) |
                    @Html.ActionLink("Detalhes", "Details", new { id = item.Id }, new { @class = "btn btn-secondary" }) |
                    @Html.ActionLink("Excluir", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }

    </table>
</div>

<div class="m-auto">
    @Html.BuildNextPreviousLinks(queryOptions, "Index", lvparams)
</div>