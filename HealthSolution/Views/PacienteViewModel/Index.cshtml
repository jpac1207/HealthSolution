@model IEnumerable<HealthSolution.ViewModels.PacienteViewModel>
@using HealthSolution.Extensions
@using HealthSolution.Models
@using System.Linq

@{
    ViewBag.Title = "Index";
    var queryOptions = (QueryOptions)ViewBag.QueryOptions;
}

<h2 class="text-center">Pacientes</h2>

<p>
    @Html.ActionLink("Novo Cadastro", "Create", new { }, new { @class = "btn btn-primary btn-block" })
</p>

@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "jumbotron" }))
{
    <div class="row">
        <div class="col-md-4">
            @Html.TextBox("nome", null, new { @class = "form-control", placeholder = "Paciente", onchange = "form.submit()" })
        </div>
        <div class="col-md-4">
            @Html.TextBox("cpf", null, new { @class = "form-control cpf", placeholder = "Cpf", onchange = "form.submit()" })
        </div>
        <div class="col-md-4">
            <button class="btn btn-success">Buscar</button>
        </div>
    </div>
}
<div class="table-responsive">
    <table class="table">
        <tr class="bg-dark text-white">
            <th>
                Prontuário
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cpf)
            </th>
            <th>
                Data de Nascimento
            </th>
            <th>
                Data de Cadastro
            </th>
            <th>
                Como Conheceu?
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cidade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Bairro)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rua)
            </th>
            <th>
                Numero Residência
            </th>
            <th class="phoneCell">
                Telefone
            </th>
            <th class="buttonCell"></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.ActionLink("Prontuário", "Prontuario", new { id = item.Id }, new { @class = "btn btn-dark" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cpf)
                </td>
                <td>
                    @(item.DataNascimento != null ? item.DataNascimento.Date.ToString("dd/MM/yyyy") : "")
                </td>
                <td>
                    @(item.DataCadastro != null ? item.DataCadastro.Date.ToString("dd/MM/yyyy") : "")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ComoConheceu)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cidade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Bairro)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rua)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumeroResidencia)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumeroTelefone)
                </td>
                <td>
                    @Html.ActionLink("Editar", "Edit", new { id = item.Id }, new { @class = "btn btn-primary" }) |
                    @Html.ActionLink("Detalhar", "Details", new { id = item.Id }, new { @class = "btn btn-secondary" }) |
                    @Html.ActionLink("Excluir", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }

    </table>
</div>
@{
    string lvparams = "";
    var nome = "";
    if (ViewBag.nome != null)
    {
        nome = ViewBag.nome;
    }

    var cpf = "";
    if (ViewBag.cpf != null)
    {
        cpf = ViewBag.cpf;
    }

    lvparams = string.Format("nome={0}&cpf={1}", nome, cpf);
}
@Html.BuildNextPreviousLinks(queryOptions, "Index", lvparams)
